unit ConcretBuilder;

interface

uses
  BuilderInterface,
  Datasnap.DBClient, FileGenerator,
  System.SysUtils;

type
  TConcretBuilder = class(TInterfacedObject, iBuilder)
  private
    FDataSet: TClientDataSet;
    FFileGenerator : iFileGenerator;

    FRecordCount : Integer;
  public
    constructor Create(aData: olevariant);
    destructor Destroy; override;
    class function New(aData: olevariant): iBuilder;
    function BuilderHeader: iBuilder;
    function BuilderBody: iBuilder;
    function BuilderFooter: iBuilder;
    function GetReport: iFileGenerator;
  end;

implementation

function TConcretBuilder.BuilderBody: iBuilder;
begin
  Result := Self;
end;

function TConcretBuilder.BuilderFooter: iBuilder;
begin
  Result := Self;
  FFileGenerator
    .Add('<div id="footer">')
    .Add('<div class="container">')
    .Add('<p class="text-center">Total de Registros: ' + FRecordCount.ToString + '</p>')
    .Add('</div></body></html>');
end;

function TConcretBuilder.BuilderHeader: iBuilder;
begin
  Result := Self;
  FFileGenerator
    .Add('<!doctype html>')
    .Add('<html lang="en">')
    .Add('<head>')
    .Add('meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">')
    .Add('<meta name="viewport" content="width=device-width, initial-scale=1">')
    .Add('<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">')
    .Add('</head>')
    .Add('<div class="container">')
    .Add('<blockquote class="blockquote text-center">')
    .Add('<h4>Relatório de Fornecedores</h4>')
    .Add('<h4>' + FormatDateTime('dd/mm/yyyy hh:nn:ss', Now) + '</h4>')
    .Add('</blockquote>');
end;

constructor TConcretBuilder.Create(aData: olevariant);
begin
  FDataSet := TClientDataSet.Create(nil);
  FDataSet.Data := aData;

  FFileGenerator := TFileGenerator.New;
end;

destructor TConcretBuilder.Destroy;
begin
  FDataSet.DisposeOf;
  inherited;
end;

function TConcretBuilder.GetReport: iFileGenerator;
begin

end;

class function TConcretBuilder.New(aData: olevariant): iBuilder;
begin
  Result := Self.Create(aData);
end;

end.
